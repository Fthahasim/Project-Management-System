name: Tasks
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/task-list/{project_id}'
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Display task lists of a project

         @bodyParam id int required The id of the project
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      project_id:
        name: project_id
        description: 'The ID of the project.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      project_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "tasks": [
              {
                "id": 1,
                "project_id": 1,
                "title": "Variety media",
                "description": "Hai variety media",
                "status": "completed",
                "created_at": "2025-03-05T16:19:18.000000Z",
                "updated_at": "2025-03-05T16:21:35.000000Z",
                "remarks": [
                  {
                    "id": 1,
                    "task_id": 1,
                    "remark": "remark 1",
                    "date": "2025-10-13",
                    "created_at": "2025-03-05T16:26:44.000000Z",
                    "updated_at": "2025-03-05T16:26:44.000000Z"
                  }
                ]
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/task
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new Task for a project'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      project_id:
        name: project_id
        description: 'The id of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: required.
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: required.
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      project_id: 17
      title: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      status: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Task successfully added!",
               "data": {
                   "project_id": "1",
                   "title": "Variety media",
                   "description": "This is 4th task",
                   "status": "pending",
                   "updated_at": "2025-03-05T10:54:34.000000Z",
                   "created_at": "2025-03-05T10:54:34.000000Z",
                   "id": 1
               }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/task/{task_id}'
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a Task'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      task_id:
        name: task_id
        description: 'The id of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      project_id:
        name: project_id
        description: 'The id of the project.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      title:
        name: title
        description: required.
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: required.
        required: false
        example: 'Dolores dolorum amet iste laborum eius est dolor.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      task_id: 17
      project_id: 17
      title: consequatur
      description: 'Dolores dolorum amet iste laborum eius est dolor.'
      status: consequatur
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Task retrieved successfully!",
               "data": {
                   "id": 1,
                   "project_id": "1",
                   "title": "Variety media",
                   "description": "This is 4th task",
                   "status": "completed",
                   "updated_at": "2025-03-05T10:54:34.000000Z",
                   "created_at": "2025-03-05T10:54:34.000000Z",
                   "remarks": []
               }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/task/{task_id}'
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove or delete a task'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      id:
        name: id
        description: 'The id of the task'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Task deleted successfully!",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/task/{task_id}/remarks'
    metadata:
      groupName: Tasks
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new remark for a task'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      task_id:
        name: task_id
        description: 'The ID of the task.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      task_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      remark:
        name: remark
        description: required.
        required: false
        example: consequatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: required.
        required: false
        example: consequatur
        type: date
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      task_id:
        name: task_id
        description: 'The id of the task.'
        required: true
        example: 17
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      remark: consequatur
      date: consequatur
      task_id: 17
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Task Remark successfully added!",
               "data": {
                   "remark": "remark 1",
                   "date": "2025-10-13",
                   "updated_at": "2025-03-05T10:54:34.000000Z",
                   "created_at": "2025-03-05T10:54:34.000000Z",
                   "id": 1
               }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
